let id_ejercicio = 25;
let today = new Date().toISOString().split("T")[0];
let intentosMaximos = 5;

let lastAttemptDateKey = `lastAttemptDate_${id_ejercicio}`;
let globalAttemptsKey = `globalAttempts_${id_ejercicio}`;

let lastAttemptDate = localStorage.getItem(lastAttemptDateKey) || "";
let globalAttempts = parseInt(localStorage.getItem(globalAttemptsKey)) || 0;

// Si es un nuevo d√≠a, reiniciar intentos
if (lastAttemptDate !== today) {
  globalAttempts = 0;
  localStorage.setItem(lastAttemptDateKey, today);
  localStorage.setItem(globalAttemptsKey, globalAttempts);
}

let intentos = intentosMaximos - globalAttempts;
let bloqueado = (intentos <= 0);

// Mostrar intentos restantes
document.addEventListener("DOMContentLoaded", () => {
  document.getElementById("intentosRestantes").textContent = intentos;
  if (bloqueado) document.getElementById("btnReiniciar").disabled = true;
});

function crearCasillas(idContenedor, cantidad) {
  const contenedor = document.getElementById(idContenedor);
  contenedor.innerHTML = "";
  for (let i = 0; i < cantidad; i++) {
    const zona = document.createElement("span");
    zona.className = "dropzone";
    zona.ondrop = drop;
    zona.ondragover = allowDrop;
    contenedor.appendChild(zona);
  }
}

function allowDrop(ev) {
  if (!bloqueado) ev.preventDefault();
}

function drag(ev) {
  if (!bloqueado) ev.dataTransfer.setData("text", ev.target.id);
}

function drop(ev) {
  if (!bloqueado) {
    ev.preventDefault();
    const id = ev.dataTransfer.getData("text");
    const original = document.getElementById(id);
    const clone = original.cloneNode(true);
    clone.removeAttribute("id");
    clone.setAttribute("draggable", "false");
    clone.classList.remove("draggable");
    ev.target.innerHTML = "";
    ev.target.appendChild(clone);
  }
}

function calificar() {
  if (bloqueado) return;

  let gallinas = document.querySelectorAll("#zonaGallinas .dropzone");
  let cisnes = document.querySelectorAll("#zonaCisnes .dropzone");
  let arboles = document.querySelectorAll("#zonaArboles .dropzone");
  let flores = document.querySelectorAll("#zonaFlores .dropzone");

  let gallinasUsadas = 0, cisnesUsados = 0, arbolesUsados = 0, floresUsadas = 0;

  gallinas.forEach(z => { if (z.textContent === "‚öΩÔ∏è") gallinasUsadas++; });
  cisnes.forEach(z => { if (z.textContent === "‚öΩÔ∏è") cisnesUsados++; });
  arboles.forEach(z => { if (z.textContent === "üå≥") arbolesUsados++; });
  flores.forEach(z => { if (z.textContent === "üå∏") floresUsadas++; });

  let correctas = 0;

  if (gallinasUsadas === 6) {
    document.getElementById("iconGallinas").textContent = "‚úÖ";
    correctas++;
  } else {
    document.getElementById("iconGallinas").textContent = "‚ùå";
  }

  if (cisnesUsados === 9) {
    document.getElementById("iconCisnes").textContent = "‚úÖ";
    correctas++;
  } else {
    document.getElementById("iconCisnes").textContent = "‚ùå";
  }

  if (arbolesUsados === 5) {
    document.getElementById("iconArboles").textContent = "‚úÖ";
    correctas++;
  } else {
    document.getElementById("iconArboles").textContent = "‚ùå";
  }

  if (floresUsadas === 4) {
    document.getElementById("iconFlores").textContent = "‚úÖ";
    correctas++;
  } else {
    document.getElementById("iconFlores").textContent = "‚ùå";
  }

  const calificacion = (correctas / 4) * 10;
  document.getElementById("mensajeResultado").textContent = `Calificaci√≥n: ${calificacion}`;

  globalAttempts++;
  localStorage.setItem(globalAttemptsKey, globalAttempts);

  intentos = intentosMaximos - globalAttempts;
  document.getElementById("intentosRestantes").textContent = intentos;

  // Enviar resultado
  fetch('/ejercicios_numeros/deporte/guardar-calificacion', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({
      intento: globalAttempts,
      calificacion: calificacion,
      id_ejercicio,
      fecha: today
    })
  });

  Swal.fire({
    icon: 'success',
    title: '¬°Calificaci√≥n registrada!',
    text: `Tu calificaci√≥n fue de ${calificacion}/10.`,
    confirmButtonText: 'Aceptar'
  }).then(() => {
      mostrarMensajeMotivacional(calificacion.toFixed(1));
  });
  // Bloquear si se agotaron
  if (intentos <= 0) {
    bloqueado = true;
    document.getElementById("btnReiniciar").disabled = true;
  }

  document.getElementById("btnCalificar").disabled = true;
}

function reiniciar() {
  if (intentos > 0) {
    // Reiniciar zonas y estado
    document.querySelectorAll('.dropzone').forEach(zone => zone.innerHTML = '');
    document.getElementById("mensajeResultado").textContent = '';
    document.getElementById("iconGallinas").textContent = '';
    document.getElementById("iconCisnes").textContent = '';
    document.getElementById("iconArboles").textContent = '';
    document.getElementById("iconFlores").textContent = '';
    bloqueado = false;
    document.getElementById("btnCalificar").disabled = false;
  } else {
    Swal.fire({
      icon: 'warning',
      title: '¬°Sin intentos!',
      text: 'Has alcanzado el n√∫mero m√°ximo de intentos para hoy.',
      confirmButtonText: 'Aceptar'
    });
    document.getElementById("btnReiniciar").disabled = true;
  }
}

window.onload = function () {
  crearCasillas("zonaGallinas", 16);
  crearCasillas("zonaCisnes", 16);
  crearCasillas("zonaArboles", 16);
  crearCasillas("zonaFlores", 16);
};

function mostrarMensajeMotivacional(calificacionRaw) {
  let calificacion = Number(calificacionRaw);
  let mensaje = "";

  const bajo = [
    "Te hace falta m√°s pr√°ctica, ¬°no te desanimes!",
    "A√∫n hay √°reas que mejorar, sigue esforz√°ndote.",
    "Est√°s comenzando, cada error es una oportunidad de aprender.",
    "No fue tu mejor intento, pero puedes mejorar mucho m√°s.",
    "Sigue practicando, est√°s en el camino del aprendizaje.",
    "Con dedicaci√≥n lo lograr√°s, ¬°√°nimo!",
    "Todav√≠a no lo dominas, pero vas por buen camino.",
    "Este resultado es una base para seguir creciendo.",
    "Requiere m√°s atenci√≥n y pr√°ctica, no te rindas.",
    "Vuelve a intentarlo, cada paso cuenta."
  ];

  const medio = [
    "¬°Estuviste cerca! Solo falta un poco m√°s de pr√°ctica.",
    "Buen trabajo, sigue as√≠ y lo lograr√°s.",
    "¬°Por poco! No te rindas, vas muy bien.",
    "Vas por buen camino, ¬°√°nimo!",
    "¬°Casi lo consigues! Un poco m√°s de esfuerzo y lo lograr√°s.",
    "Buen intento, no est√°s lejos del objetivo.",
    "Contin√∫a as√≠, tu esfuerzo est√° dando frutos.",
    "¬°Sigue practicando! Est√°s muy cerca del 10.",
    "Buen desempe√±o, te falta poco para la perfecci√≥n.",
    "¬°Excelente progreso! No te detengas."
  ];

  const alto = [
    "¬°Fabuloso! Est√°s haciendo un trabajo incre√≠ble.",
    "¬°Lo lograste! Sigue as√≠.",
    "¬°Excelente resultado! Tu esfuerzo se nota.",
    "¬°Perfecto! Se nota tu dedicaci√≥n.",
    "¬°Muy bien hecho! Contin√∫a aprendiendo con entusiasmo.",
    "¬°Genial! Est√°s dominando este tema.",
    "¬°Brillante! Sigue manteniendo ese nivel.",
    "¬°Orgulloso de tu progreso!",
    "¬°Gran trabajo! Est√°s aprendiendo de forma excelente.",
    "¬°Sigue as√≠! El √©xito es tuyo."
  ];

  if (calificacion >= 1 && calificacion <= 5) {
    mensaje = bajo[Math.floor(Math.random() * bajo.length)];
  } else if (calificacion >= 6 && calificacion <= 8) {
    mensaje = medio[Math.floor(Math.random() * medio.length)];
  } else if (calificacion >= 9 && calificacion <= 10) {
    mensaje = alto[Math.floor(Math.random() * alto.length)];
  } else {
    mensaje = "Calificaci√≥n no v√°lida.";
  }

  Swal.fire({
    icon: 'info',
    title: 'Resultado',
    text: mensaje,
    confirmButtonText: 'Aceptar',
    allowOutsideClick: false,   // ‚Üê No cerrar al hacer clic fuera
    allowEscapeKey: false       // ‚Üê No cerrar al presionar Esc
  });
}